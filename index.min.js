!function (e) { e.fn.tickerText = function (t, n, o, l = 20, c = 0, i, r, f = !1, a, s) { let u, h, m, d, g, p, x, T, v, w, y, M, D, C, I, b = 0, k = 0, L = 20, N = i, j = 1 - i, A = !1, H = this, J = !1, O = 0, Q = 0, S = 0, W = 0, q = t.clone(); function z(t) { return cc2 = [], t.each(function (t, n) { let o = e(n).children(); cc2[t] = [], o.each(function (n, o) { cc2[t][n + 1] = o, e(o).replaceWith("/" + (1 + n)) }), cc2[t][0] = n.innerHTML }), { content: cc2 } } let B = z(q); console.log("serialised object: \n", B), a && e("#" + a).on("click", function (e) { e.preventDefault(), console.log("pause:", !J), J = !J }), s && e("#" + s).on("click", function (e) { e.preventDefault(), console.log("stop:", A), A = !A }); let E = Math.floor(o * N * 1e3 / t[k % t.length].textContent.length), F = t[k % t.length].textContent.split(""), G = B.content[k % B.content.length]; function K() { clearTimeout(M), clearTimeout(D), clearTimeout(C), clearTimeout(I), clearTimeout(v), clearTimeout(w) } function P() { v = setTimeout(function () { if (!n && F.length, b < F.length && k >= 0) { if ("/" !== G[0][b - S + 2 * W] && 0 === O && (H.append(F[b]), console.log("parent textArray[current] , current html appended", F[b], H.html())), "/" === G[0][b - S + 2 * W]) { let t = W + 1; G[0][b + 1 - S + 2 * W] == t && (0 === O && (O = t, Q = e(G[t]).text().length, console.log("childLength initial add", Q, t, JSON.stringify(G[t]), e(G[t]).text()), e(G[t]).text(""), H.append(G[t]), console.log("child cc0, current html tag appended 0", e(G[t]).text(), H.html())), H.children()[W].append(F[b]), console.log("child current html tag , appended !0", F[b], H.html()), Q -= 1, console.log("childLength after", Q), S += 1, 0 === Q && (W = t, console.log("childCounted add - exit", W, e(G[t]).text()), O = 0)) } b++ } if (b >= F.length) return u = performance.now(), (h = u - g) >= 1e3 * N * o - L && (h = 0), f && (u = performance.now(), console.log("completed pt1 ", u - g, "microseconds", "text", H.text())), clearInterval(v), void (D = setTimeout(function () { if (m = performance.now(), f && console.log("completed pt2", m - g, "microseconds", "text", H.text()), C = setTimeout(function () { A ? clearTimeout(C) : function c() { w = setTimeout(function () { if (b >= 0) { if ("/" === G[0][b - S + 2 * W - 2]) { let t = W - 1; if (G[0][b - S + 2 * W - 1] == W) { 0 === O && (O = W, Q = e(G[W]).text().length); let n = e(H.children()[t]).text(), o = n.substring(0, n.length - 1); e(H.children()[t]).text(o), S -= 1, 0 == (Q -= 1) && (H.children()[t].remove(), W = t, O = 0) } } if ("/" !== G[0][b - S + 2 * W - 2] && 0 === O) { let e = H.html().substring(0, H.html().length - 1); H.text().length > n && H.html(e) } b-- } if (b <= n) return d = performance.now(), dsDiff = d - m, dsDiff >= 1e3 * j * o - L && (dsDiff = 0), f && console.log("completed pt3 ", d - g, "microseconds", "text", H.text()), clearTimeout(w), void (I = setTimeout(function () { let e = H.text(); n || !e || A || !vis() || J || H.text(""), r && 0 === k && (o = r, E = Math.floor(o * N * 1e3 / t[k % t.length].textContent.length), R = Math.floor(o * j * 1e3 / e.length)), A || J && !vis() || (k++, q = t.clone(), B = z(q), F = t[k % t.length].textContent.split(""), G = B.content[[k % B.content.length]], f && (T = performance.now(), console.log("completed pt4", T - g, "microseconds", "text", H.text())), K(), U()), A || !J && vis() || (K(), function e() { f && (p = performance.now()), y = setTimeout(function () { if (!A && !J && vis()) return f && (x = performance.now(), console.log("timeline Noop end for iterations dxx - dyy, count final", k, x - p, "microseconds")), clearTimeout(y), void U(); A || !J && vis() || (f && (x = performance.now(), console.log("timeline Noop for iterations dxx - dyy, count final", k, x - p, "microseconds")), e()), A && clearInterval(y) }, E) }()) }, Math.floor(1e3 * j * o - L - dsDiff))); A || (clearInterval(w), c()) }, l <= R ? l : R) }() }, 0), c && k >= t.length * c) return A = !0, void clearTimeout(D) }, Math.floor(1e3 * N * o - L - h))); A || (clearInterval(v), P()) }, l <= E ? l : E) } let R = Math.floor(o * j * 1e3 / H.text().length); function U() { g = performance.now(), f && (g = performance.now(), console.log("count", k)), k < 1 && H.text(""), M = setTimeout(function () { A ? clearTimeout(M) : P() }, 0) } U() } }(jQuery);